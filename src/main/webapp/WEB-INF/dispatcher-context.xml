<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	
	<!-- 어노테이션 사용하려고 사용 -->
	<mvc:annotation-driven>
		<mvc:message-converters> 
			<!-- @ResponseBody로 String 처리할때 한글처리 --> 
			<bean class="org.springframework.http.converter.StringHttpMessageConverter"> 
				<property name="supportedMediaTypes"> 
					<list> 
						<value>text/html;charset=UTF-8</value> 
					</list> 
				</property> 
			</bean> 
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- @Autowired 어노테이션 쓰기 위해 -->
	<context:annotation-config />

	<!-- 자동으로 @Autowired 등록해줌 -->
	<context:component-scan base-package="controller">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- [1] DataSource 빈 선언 -->
	<context:property-placeholder
		location="classpath:config/oracle.properties" />
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- [2] SqlSessionFactoryBean 빈 선언 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:config/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- [3] SqlSessionTemplate 빈 선언 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- [4] TransactionManager 빈 선언 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- [5] 선언적 트랜잭션(tx:advice) 빈 선언 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*Process" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- [6] 트랜잭션 빈 선언 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* service.*.*(..))"/>
	</aop:config>
	
	<!-- [7] DAO 빈 선언 -->
	<bean id="userDao" class="dao.UserDaoImp">
		<property name="userSqlSession" ref="sqlSession" />
	</bean>
	
	<bean id="boardDao" class="dao.BoardDaoImp">
		<property name="boardSqlSession" ref="sqlSession" />
	</bean>
	
	<bean id="dmDao" class="dao.DmDaoImp">
		<property name="dmSqlSession" ref="sqlSession" />
	</bean>
	
	<bean id="fileDao" class="dao.FileDaoImp">
		<property name="fileSqlSession" ref="sqlSession" />
	</bean>
	
	<bean id="commentDao" class="dao.CommentDaoImp">
		<property name="commentSqlSession" ref="sqlSession" />
	</bean>
	
	<bean id="noticeDao" class="dao.NoticeDaoImp">
		<property name="noticeSqlSession" ref="sqlSession" />
	</bean>
	
	<bean id="ratingDao" class="dao.RatingDaoImp">
		<property name="ratingSqlSession" ref="sqlSession" />
	</bean>
	
	<bean id ="paymentDao" class="dao.PaymentDaoImp">
		<property name="paymentSqlSession" ref="sqlSession"></property>
	</bean>
	
	<bean class="dao.AdminDaoImp" id="adminDao">
		<property name="adminSqlSession" ref="sqlSession"/>
	</bean>
	
	<!-- [8] Service 빈 선언 -->
	<bean id="userService" class="service.UserServiceImp">
		<property name="userDao" ref="userDao" />
	</bean>
	
	<bean id="boardService" class="service.BoardServiceImp">
		<property name="boardDao" ref="boardDao" />
	</bean>
	
	<bean id="dmService" class="service.DmServiceImp">
		<property name="dmDao" ref="dmDao" />
	</bean>
	
	<bean id="commentService" class="service.CommentServiceImp">
		<property name="commentDao" ref="commentDao" />
	</bean>
	
	<bean id="noticeService" class="service.NoticeServiceImp">
		<property name="noticeDao" ref="noticeDao" />
	</bean>
	
	<bean id="ratingService" class="service.RatingServiceImp">
		<property name="ratingDao" ref="ratingDao" />
	</bean>
	
	<bean id="paymentService" class="service.PaymentServiceImp">
		<property name="paymentDao" ref="paymentDao" />
	</bean>
	
	<bean class="service.AdminServiceImp" id="adminService">
		<property name="adminDao" ref="adminDao"/>
	</bean>
	
	<bean class="controller.UserController" />
	<bean class="controller.MailController" />
	<bean class="controller.BoardController" />
	<bean class="controller.DmController" />
	<bean class="controller.MovieController" />
	<bean class="controller.NoticeController" />
	<bean class="controller.SearchController" />
	<bean class="controller.PaymentController" />
	<bean class="controller.AdminController"/>
	
	<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- interceptor -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/intro.do"/>
			<mvc:mapping path="/loginPage.do"/>
			<mvc:mapping path="/loginFormDefault.do"/>
			<mvc:mapping path="/loginProDefault.do"/>
			<mvc:mapping path="/joinFormDefault.do"/>
			<mvc:mapping path="/joinProDefault.do"/>
			<mvc:mapping path="/joinSuccess.do"/>
			<bean class="interceptor.LoginInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/index.do"/>
			<mvc:mapping path="/timeline.do"/>
			<mvc:mapping path="/exit.do"/>
			<mvc:mapping path="/profile.do"/>
			<mvc:mapping path="/updateInfoForm.do"/>
			<bean class="interceptor.MainInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 메일보내기 -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="dsu8854@gmail.com" />
		<property name="password" value="ehdtn4841" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
	
	<!-- websocket 등록 -->
	<bean id ="webSocketHandler" class="socket.WebSocketHandler"/>
	
	<websocket:handlers>
		<websocket:mapping handler="webSocketHandler" path="/chatws.do"/>		
		<!-- 클라이언트에서 /chatws.do로 요청이 들어오면 핸들러를 실행해라 -->
	</websocket:handlers>
	
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<property name="order" value="1" />
	</bean>
	
	<!-- view -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>
	
	<!-- 파일 업로드 시작 -->
	<!-- 첨부 파일의 임시기억장치 경로 설정 -->
	<!-- 스프링 버전 3.0 부터는 안해도 됨 -->
	<bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg value="./src/main/webapp/files/" />
	</bean>
	
	<!-- 첨부파일을 임시기억저장소에 저장한다. -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		<property name="uploadTempDir" ref="uploadDirResource" />
		<property name="maxUploadSize" value="1000000000" /> 
	</bean>
	<!-- 파일 업로드 끝 -->
	
	<!-- 로그인 BO -->
	<bean id="kakaoLoginBO" class="oauth.bo.KakaoLoginBO" />
	<bean id="naverLoginBO" class="oauth.bo.NaverLoginBO" />
</beans>